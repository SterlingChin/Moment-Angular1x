{"version":3,"sources":["app.js","cookieSvc.js","javascript.js","jquery.js","mainCtrl.js","nameSvc.js","photoSvc.js","quoteSvc.js","weatherSvc.js"],"names":["angular","module","factory","$cookies","setCookieData","settingData","JSON","stringify","put","console","log","userSettings","settings","get","parse","userName","timeOption","greetingOption","weatherOption","quoteOption","backgroundOption","updateClock","currentTime","Date","currentHours","getHours","currentMinutes","getMinutes","timeOfDay","currentTimeString","document","getElementById","firstChild","nodeValue","directive","userPreferences","scope","restrict","link","elems","attrs","$","ready","on","show","setTimeout","css","hide","controller","$scope","quoteSvc","photoSvc","nameSvc","getQuote","then","response","quoteText","trim","quoteAuthor","greeting","name","latitude","geoplugin_latitude","longitude","geoplugin_longitude","city","geoplugin_city","service","localStorage","getItem","setName","setItem","$http","getUsersFavs","baseUrl","collectionID","method","url","data","results","status","getWeather"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('unsplashExtention', [\"ngCookies\"]);\n","angular.module('unsplashExtention').factory('userPreferences', ['$cookies', function($cookies) {\n                return {\n                    setCookieData: function(settingData) {\n                      settingData = JSON.stringify(settingData);\n                        $cookies.put('settingKey', settingData);\n                        console.log(settingData);\n                    },\n\n                            userSettings: function() {\n                                var settings = $cookies.get('settingKey');\n                                if (settings) {\n                                    settings = JSON.parse(settings);\n                                        console.log(settings);\n                                    return settings;\n                                }\n                                return {\n                                    userName: \" \",\n                                    timeOption: false,\n                                    greetingOption: false,\n                                    weatherOption: false,\n                                    quoteOption: false,\n                                    backgroundOption: false\n                                };\n                            }\n                          };\n                        }\n\n                ]);\n","// Not needed function...kept here because I may need it later\n// function init() {\n//     timeDisplay = document.createTextNode(\"\");\n//     document.getElementById(\"clock\").appendChild(timeDisplay);\n// }\n\nfunction updateClock() {\n    var currentTime = new Date();\n\n    var currentHours = currentTime.getHours();\n    var currentMinutes = currentTime.getMinutes();\n    currentMinutes = (currentMinutes < 10 ? \"0\" : \"\") + currentMinutes;\n    var timeOfDay = (currentHours < 12) ? \"AM\" : \"PM\";\n    currentHours = (currentHours > 12) ? currentHours - 12 : currentHours;\n    currentHours = (currentHours === 0) ? 12 : currentHours;\n    var currentTimeString = currentHours + \":\" + currentMinutes + \" \" + timeOfDay;\n    document.getElementById(\"clock\").firstChild.nodeValue = currentTimeString;\n}\n","angular.module('unsplashExtention')\n    .directive('animateDir', function(userPreferences) {\n        return {\n            scope: {\n                settings: \"=\"\n            },\n            restrict: 'EA',\n            link: function(scope, elems, attrs) {\n                $(document).ready(function() {\n                    $('.settings-icon').on('mouseenter', function() {\n\n                        $('.menu-container').show(500, function() {\n                            setTimeout(function() {\n                                $('.menu-container').css('display', 'flex');\n                                $('.menu-items').show(150);\n                                $('.menu-title').show(150);\n                            }, 100);\n\n                        });\n                    });\n\n                    $('.menu-container').on('mouseleave', function() {\n                        console.log(scope.settings);\n                        $('.menu-container').hide(500);\n                        $('.menu-items').hide(100);\n                        $('.menu-title').hide(100);\n                        setTimeout(function() {\n                            $('.menu-container').css('display', 'none');\n                        }, 500);\n                        userPreferences.setCookieData(scope.settings);\n                        console.log(scope.settings);\n                    });\n                    //\n                    // $('.name').on('keyUp', function() {\n                    //     console.log($('.name').val());\n                    //     var currentName = $('.name').val();\n                    //     localStorage.setItem('name', currentName);\n                    // });\n                });\n            }\n        };\n    });\n","angular.module('unsplashExtention').controller('mainCtrl', function($scope, quoteSvc, photoSvc, nameSvc, userPreferences) {\n    quoteSvc.getQuote().then(function(response) {\n        console.log(response);\n        $scope.quoteText = response.quoteText.trim();\n        $scope.quoteAuthor = response.quoteAuthor || \"Unknown\";\n    });\n\n    // weatherSvc.getWeather().then(function(response){\n    //   console.log(response);\n    //   $scope.weatherMain = response.weather.main;\n    //   $scope.weatherIcon = response.weather.icon;\n    //   $scope.weatherTemp = response.main.temp;\n    //   $scope.weatherCity = response.name;\n    // });\n\n    function greeting() {\n        var currentTime = new Date();\n        var currentHours = currentTime.getHours();\n        if (currentHours < 12) {\n            $scope.greeting = \"Good Morning\";\n        } else if (17 > currentHours && currentHours >= 12) {\n            $scope.greeting = \"Good Afternoon\";\n        } else {\n            $scope.greeting = \"Good Evening\";\n        }\n    }\n    greeting();\n\n    // $scope.location = \"http://forecast.io/embed/#lat=\" + geoplugin_latitude() + \"&lon=\" + geoplugin_longitude() + \"&name=\" + geoplugin_city();\n    $scope.settings = userPreferences.userSettings();\n    console.log($scope.settings);\n    $scope.name = $scope.settings.userName;\n    console.log($scope.name);\n\n\n    $scope.latitude = geoplugin_latitude();\n    $scope.longitude = geoplugin_longitude();\n    $scope.city = geoplugin_city();\n    console.log(geoplugin_city());\n    console.log(geoplugin_longitude());\n    console.log(geoplugin_latitude());\n\n    // $scope.location = 'http://api.openweathermap.org/data/2.5/weather?lat=' + geoplugin_latitude() + '&lon=' + geoplugin_longitude() + '&APPID=93491e6dadbe8a2ac36dc3e3855f670a';\n\n\n});\n","angular.module('unsplashExtention').service('nameSvc', function(){\n  this.name = '';\n  if(localStorage.getItem('user')){\n    this.name = localStorage.getItem('user');\n  }\n  this.setName = function(name){\n    localStorage.setItem('name', name);\n  };\n});\n","angular.module('unsplashExtention').service('photoSvc', function($http){\n  this.getUsersFavs = function(){\n    var baseUrl = \"https://api.unsplash.com/\";\n    var collectionID = 140375;\n    return $http({\n      method: 'GET',\n      url: baseUrl + \"collections/:\" + collectionID + \"/photos\"\n    }).then(function(response){\n      if(response === 200){\n        console.log(response.data);\n        return response.data.results;\n      }\n      return \"link broken\";\n    });\n  };\n});\n","angular.module('unsplashExtention').service('quoteSvc', function($http){\n  this.getQuote = function(){\n    return $http({\n      method: 'GET',\n      url: \"http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en\"\n    }).then(function(response){\n      if(response.status === 200){\n        // console.log(response.data.quoteText);\n        // console.log(response.data.quoteAuthor);\n        return response.data;\n      }\n      return \"Have a beautiful day!\";\n    });\n  };\n});\n","angular.module('unsplashExtention').service('weatherSvc', function(){\n  this.getWeather = function(){\n    return $http({\n      method: 'GET',\n      url: 'http://api.openweathermap.org/data/2.5/weather?lat=' + geoplugin_latitude() + '&lon=' + geoplugin_longitude() + '&APPID=93491e6dadbe8a2ac36dc3e3855f670a'}).then(function(response){\n        if(response.status === 200){\n          return response.data;\n        }\n        return response.status;\n    });\n  };\n});\n"]}